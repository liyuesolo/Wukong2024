#ifndef EOL_ROD_STRETCHING_ENERGY_H
#define EOL_ROD_STRETCHING_ENERGY_H

#include "../include/VecMatDef.h"

template <class T>
T stretchingEnergyLocal(T ks, const Matrix<T,3,1> & X1, const Matrix<T,3,1> & X2, const Matrix<T,3,1> & x1, const Matrix<T,3,1> & x2)
{
    T _i_var[24];
	_i_var[0] = (X2(1,0))-(X1(1,0));
	_i_var[1] = (X2(0,0))-(X1(0,0));
	_i_var[2] = (x2(1,0))-(x1(1,0));
	_i_var[3] = (x2(0,0))-(x1(0,0));
	_i_var[4] = (X2(2,0))-(X1(2,0));
	_i_var[5] = (_i_var[0])*(_i_var[0]);
	_i_var[6] = (_i_var[1])*(_i_var[1]);
	_i_var[7] = (x2(2,0))-(x1(2,0));
	_i_var[8] = (_i_var[2])*(_i_var[2]);
	_i_var[9] = (_i_var[3])*(_i_var[3]);
	_i_var[10] = (_i_var[4])*(_i_var[4]);
	_i_var[11] = (_i_var[6])+(_i_var[5]);
	_i_var[12] = (_i_var[7])*(_i_var[7]);
	_i_var[13] = (_i_var[9])+(_i_var[8]);
	_i_var[14] = (_i_var[11])+(_i_var[10]);
	_i_var[15] = (_i_var[13])+(_i_var[12]);
	_i_var[16] = std::sqrt(_i_var[14]);
	_i_var[17] = std::sqrt(_i_var[15]);
	_i_var[18] = 0.5;
	_i_var[19] = (_i_var[17])-(_i_var[16]);
	_i_var[20] = (_i_var[18])*(ks);
	_i_var[21] = (_i_var[19])*(_i_var[19]);
	_i_var[22] = (_i_var[20])/(_i_var[16]);
	_i_var[23] = (_i_var[22])*(_i_var[21]);
	return _i_var[23];
}

template <class T>
void computeEoLRodStretchingEnergyGradient(double ks, const Matrix<T, 3, 1> & X1, const Matrix<T, 3, 1> & X2, const Matrix<T, 3, 1> & x1, const Matrix<T, 3, 1> & x2, 
	Matrix<T, 12, 1>& energygradient){
	double _i_var[58];
	_i_var[0] = (X2(1,0))-(X1(1,0));
	_i_var[1] = (X2(0,0))-(X1(0,0));
	_i_var[2] = (x2(1,0))-(x1(1,0));
	_i_var[3] = (x2(0,0))-(x1(0,0));
	_i_var[4] = (X2(2,0))-(X1(2,0));
	_i_var[5] = (_i_var[0])*(_i_var[0]);
	_i_var[6] = (_i_var[1])*(_i_var[1]);
	_i_var[7] = (x2(2,0))-(x1(2,0));
	_i_var[8] = (_i_var[2])*(_i_var[2]);
	_i_var[9] = (_i_var[3])*(_i_var[3]);
	_i_var[10] = (_i_var[4])*(_i_var[4]);
	_i_var[11] = (_i_var[6])+(_i_var[5]);
	_i_var[12] = (_i_var[7])*(_i_var[7]);
	_i_var[13] = (_i_var[9])+(_i_var[8]);
	_i_var[14] = (_i_var[11])+(_i_var[10]);
	_i_var[15] = (_i_var[13])+(_i_var[12]);
	_i_var[16] = 0.5;
	_i_var[17] = std::sqrt(_i_var[14]);
	_i_var[18] = std::sqrt(_i_var[15]);
	_i_var[19] = (_i_var[16])*(ks);
	_i_var[20] = (_i_var[18])-(_i_var[17]);
	_i_var[21] = (_i_var[19])/(_i_var[17]);
	_i_var[22] = (_i_var[17])*(_i_var[17]);
	_i_var[23] = (_i_var[21])*(_i_var[20]);
	_i_var[24] = 2;
	_i_var[25] = (_i_var[19])/(_i_var[22]);
	_i_var[26] = -1;
	_i_var[27] = (_i_var[24])*(_i_var[23]);
	_i_var[28] = -(_i_var[25]);
	_i_var[29] = (_i_var[20])*(_i_var[20]);
	_i_var[30] = (_i_var[24])*(_i_var[18]);
	_i_var[31] = 1;
	_i_var[32] = (_i_var[24])*(_i_var[17]);
	_i_var[33] = (_i_var[27])*(_i_var[26]);
	_i_var[34] = (_i_var[29])*(_i_var[28]);
	_i_var[35] = (_i_var[31])/(_i_var[30]);
	_i_var[36] = (_i_var[31])/(_i_var[32]);
	_i_var[37] = (_i_var[34])+(_i_var[33]);
	_i_var[38] = (_i_var[27])*(_i_var[35]);
	_i_var[39] = (_i_var[37])*(_i_var[36]);
	_i_var[40] = (_i_var[38])*(_i_var[3]);
	_i_var[41] = (_i_var[38])*(_i_var[2]);
	_i_var[42] = (_i_var[38])*(_i_var[7]);
	_i_var[43] = (_i_var[39])*(_i_var[1]);
	_i_var[44] = (_i_var[39])*(_i_var[0]);
	_i_var[45] = (_i_var[39])*(_i_var[4]);
	_i_var[46] = (_i_var[24])*(_i_var[40]);
	_i_var[47] = (_i_var[24])*(_i_var[41]);
	_i_var[48] = (_i_var[24])*(_i_var[42]);
	_i_var[49] = (_i_var[24])*(_i_var[43]);
	_i_var[50] = (_i_var[24])*(_i_var[44]);
	_i_var[51] = (_i_var[24])*(_i_var[45]);
	_i_var[52] = (_i_var[46])*(_i_var[26]);
	_i_var[53] = (_i_var[47])*(_i_var[26]);
	_i_var[54] = (_i_var[48])*(_i_var[26]);
	_i_var[55] = (_i_var[49])*(_i_var[26]);
	_i_var[56] = (_i_var[50])*(_i_var[26]);
	_i_var[57] = (_i_var[51])*(_i_var[26]);
	energygradient(0,0) = _i_var[52];
	energygradient(1,0) = _i_var[53];
	energygradient(2,0) = _i_var[54];
	energygradient(3,0) = _i_var[46];
	energygradient(4,0) = _i_var[47];
	energygradient(5,0) = _i_var[48];
	energygradient(6,0) = _i_var[55];
	energygradient(7,0) = _i_var[56];
	energygradient(8,0) = _i_var[57];
	energygradient(9,0) = _i_var[49];
	energygradient(10,0) = _i_var[50];
	energygradient(11,0) = _i_var[51];
}

template <class T>
void computeEoLRodStretchingEnergyHessian(double ks, const Matrix<T, 3, 1> & X1, const Matrix<T, 3, 1> & X2, const Matrix<T, 3, 1> & x1, const Matrix<T, 3, 1> & x2, 
	Matrix<T, 12, 12>& energyhessian){
	double _i_var[163];
	_i_var[0] = (X2(1,0))-(X1(1,0));
	_i_var[1] = (X2(0,0))-(X1(0,0));
	_i_var[2] = (X2(2,0))-(X1(2,0));
	_i_var[3] = (_i_var[0])*(_i_var[0]);
	_i_var[4] = (_i_var[1])*(_i_var[1]);
	_i_var[5] = (_i_var[2])*(_i_var[2]);
	_i_var[6] = (_i_var[4])+(_i_var[3]);
	_i_var[7] = (_i_var[6])+(_i_var[5]);
	_i_var[8] = (x2(1,0))-(x1(1,0));
	_i_var[9] = (x2(0,0))-(x1(0,0));
	_i_var[10] = std::sqrt(_i_var[7]);
	_i_var[11] = (x2(2,0))-(x1(2,0));
	_i_var[12] = (_i_var[8])*(_i_var[8]);
	_i_var[13] = (_i_var[9])*(_i_var[9]);
	_i_var[14] = (_i_var[10])*(_i_var[10]);
	_i_var[15] = 0.5;
	_i_var[16] = (_i_var[11])*(_i_var[11]);
	_i_var[17] = (_i_var[13])+(_i_var[12]);
	_i_var[18] = (_i_var[14])*(_i_var[14]);
	_i_var[19] = (_i_var[15])*(ks);
	_i_var[20] = (_i_var[17])+(_i_var[16]);
	_i_var[21] = (_i_var[19])/(_i_var[18]);
	_i_var[22] = std::sqrt(_i_var[20]);
	_i_var[23] = 2;
	_i_var[24] = -(_i_var[21]);
	_i_var[25] = -1;
	_i_var[26] = (_i_var[23])*(_i_var[22]);
	_i_var[27] = (_i_var[23])*(_i_var[10]);
	_i_var[28] = (_i_var[19])/(_i_var[14]);
	_i_var[29] = (_i_var[22])-(_i_var[10]);
	_i_var[30] = (_i_var[25])*(_i_var[24]);
	_i_var[31] = (_i_var[26])*(_i_var[26]);
	_i_var[32] = 1;
	_i_var[33] = (_i_var[27])*(_i_var[27]);
	_i_var[34] = -(_i_var[28]);
	_i_var[35] = (_i_var[23])*(_i_var[29]);
	_i_var[36] = (_i_var[30])*(_i_var[10]);
	_i_var[37] = (_i_var[32])/(_i_var[31]);
	_i_var[38] = (_i_var[19])/(_i_var[10]);
	_i_var[39] = (_i_var[32])/(_i_var[33]);
	_i_var[40] = (_i_var[35])*(_i_var[34]);
	_i_var[41] = -2;
	_i_var[42] = (_i_var[23])*(_i_var[36]);
	_i_var[43] = (_i_var[29])*(_i_var[29]);
	_i_var[44] = -(_i_var[37]);
	_i_var[45] = (_i_var[38])*(_i_var[23]);
	_i_var[46] = -(_i_var[39]);
	_i_var[47] = (_i_var[38])*(_i_var[35]);
	_i_var[48] = (_i_var[41])*(_i_var[40]);
	_i_var[49] = (_i_var[43])*(_i_var[42]);
	_i_var[50] = (_i_var[32])/(_i_var[26]);
	_i_var[51] = (_i_var[44])*(_i_var[23]);
	_i_var[52] = (_i_var[25])*(_i_var[45]);
	_i_var[53] = (_i_var[32])/(_i_var[27]);
	_i_var[54] = (_i_var[46])*(_i_var[23]);
	_i_var[55] = (_i_var[47])*(_i_var[25]);
	_i_var[56] = (_i_var[43])*(_i_var[34]);
	_i_var[57] = (_i_var[49])+(_i_var[48]);
	_i_var[58] = (_i_var[51])*(_i_var[50]);
	_i_var[59] = (_i_var[50])*(_i_var[50]);
	_i_var[60] = (_i_var[40])+(_i_var[52]);
	_i_var[61] = (_i_var[54])*(_i_var[53]);
	_i_var[62] = (_i_var[56])+(_i_var[55]);
	_i_var[63] = (_i_var[57])+(_i_var[45]);
	_i_var[64] = (_i_var[53])*(_i_var[53]);
	_i_var[65] = (_i_var[47])*(_i_var[58]);
	_i_var[66] = (_i_var[59])*(_i_var[45]);
	_i_var[67] = (_i_var[50])*(_i_var[60]);
	_i_var[68] = (_i_var[62])*(_i_var[61]);
	_i_var[69] = (_i_var[64])*(_i_var[63]);
	_i_var[70] = (_i_var[66])+(_i_var[65]);
	_i_var[71] = (_i_var[23])*(_i_var[9]);
	_i_var[72] = (_i_var[23])*(_i_var[11]);
	_i_var[73] = (_i_var[53])*(_i_var[67]);
	_i_var[74] = (_i_var[23])*(_i_var[2]);
	_i_var[75] = (_i_var[23])*(_i_var[8]);
	_i_var[76] = (_i_var[69])+(_i_var[68]);
	_i_var[77] = (_i_var[23])*(_i_var[1]);
	_i_var[78] = (_i_var[23])*(_i_var[0]);
	_i_var[79] = (_i_var[71])*(_i_var[70]);
	_i_var[80] = (_i_var[72])*(_i_var[70]);
	_i_var[81] = (_i_var[47])*(_i_var[50]);
	_i_var[82] = (_i_var[71])*(_i_var[71]);
	_i_var[83] = (_i_var[71])*(_i_var[73]);
	_i_var[84] = (_i_var[74])*(_i_var[73]);
	_i_var[85] = (_i_var[75])*(_i_var[75]);
	_i_var[86] = (_i_var[75])*(_i_var[73]);
	_i_var[87] = (_i_var[72])*(_i_var[72]);
	_i_var[88] = (_i_var[72])*(_i_var[73]);
	_i_var[89] = (_i_var[77])*(_i_var[76]);
	_i_var[90] = (_i_var[74])*(_i_var[76]);
	_i_var[91] = (_i_var[62])*(_i_var[53]);
	_i_var[92] = (_i_var[77])*(_i_var[77]);
	_i_var[93] = (_i_var[78])*(_i_var[78]);
	_i_var[94] = (_i_var[74])*(_i_var[74]);
	_i_var[95] = (_i_var[75])*(_i_var[79]);
	_i_var[96] = (_i_var[71])*(_i_var[80]);
	_i_var[97] = (_i_var[81])*(_i_var[23]);
	_i_var[98] = (_i_var[82])*(_i_var[70]);
	_i_var[99] = (_i_var[77])*(_i_var[83]);
	_i_var[100] = (_i_var[78])*(_i_var[83]);
	_i_var[101] = (_i_var[71])*(_i_var[84]);
	_i_var[102] = (_i_var[75])*(_i_var[80]);
	_i_var[103] = (_i_var[85])*(_i_var[70]);
	_i_var[104] = (_i_var[77])*(_i_var[86]);
	_i_var[105] = (_i_var[78])*(_i_var[86]);
	_i_var[106] = (_i_var[75])*(_i_var[84]);
	_i_var[107] = (_i_var[87])*(_i_var[70]);
	_i_var[108] = (_i_var[25])*(_i_var[88]);
	_i_var[109] = (_i_var[74])*(_i_var[88]);
	_i_var[110] = (_i_var[78])*(_i_var[89]);
	_i_var[111] = (_i_var[77])*(_i_var[90]);
	_i_var[112] = (_i_var[91])*(_i_var[23]);
	_i_var[113] = (_i_var[92])*(_i_var[76]);
	_i_var[114] = (_i_var[78])*(_i_var[90]);
	_i_var[115] = (_i_var[93])*(_i_var[76]);
	_i_var[116] = (_i_var[94])*(_i_var[76]);
	_i_var[117] = (_i_var[25])*(_i_var[95]);
	_i_var[118] = (_i_var[25])*(_i_var[96]);
	_i_var[119] = (_i_var[98])+(_i_var[97]);
	_i_var[120] = (_i_var[25])*(_i_var[99]);
	_i_var[121] = (_i_var[25])*(_i_var[100]);
	_i_var[122] = (_i_var[25])*(_i_var[101]);
	_i_var[123] = (_i_var[25])*(_i_var[102]);
	_i_var[124] = (_i_var[103])+(_i_var[97]);
	_i_var[125] = (_i_var[25])*(_i_var[104]);
	_i_var[126] = (_i_var[25])*(_i_var[105]);
	_i_var[127] = (_i_var[25])*(_i_var[106]);
	_i_var[128] = (_i_var[107])+(_i_var[97]);
	_i_var[129] = (_i_var[77])*(_i_var[108]);
	_i_var[130] = (_i_var[78])*(_i_var[108]);
	_i_var[131] = (_i_var[25])*(_i_var[109]);
	_i_var[132] = (_i_var[77])*(_i_var[88]);
	_i_var[133] = (_i_var[78])*(_i_var[88]);
	_i_var[134] = (_i_var[25])*(_i_var[110]);
	_i_var[135] = (_i_var[25])*(_i_var[111]);
	_i_var[136] = (_i_var[113])+(_i_var[112]);
	_i_var[137] = (_i_var[25])*(_i_var[114]);
	_i_var[138] = (_i_var[115])+(_i_var[112]);
	_i_var[139] = (_i_var[116])+(_i_var[112]);
	_i_var[140] = (_i_var[25])*(_i_var[117]);
	_i_var[141] = (_i_var[25])*(_i_var[118]);
	_i_var[142] = (_i_var[25])*(_i_var[119]);
	_i_var[143] = (_i_var[25])*(_i_var[120]);
	_i_var[144] = (_i_var[25])*(_i_var[121]);
	_i_var[145] = (_i_var[25])*(_i_var[122]);
	_i_var[146] = (_i_var[25])*(_i_var[123]);
	_i_var[147] = (_i_var[25])*(_i_var[124]);
	_i_var[148] = (_i_var[25])*(_i_var[125]);
	_i_var[149] = (_i_var[25])*(_i_var[126]);
	_i_var[150] = (_i_var[25])*(_i_var[127]);
	_i_var[151] = (_i_var[25])*(_i_var[128]);
	_i_var[152] = (_i_var[25])*(_i_var[129]);
	_i_var[153] = (_i_var[25])*(_i_var[130]);
	_i_var[154] = (_i_var[25])*(_i_var[131]);
	_i_var[155] = (_i_var[25])*(_i_var[132]);
	_i_var[156] = (_i_var[25])*(_i_var[133]);
	_i_var[157] = (_i_var[25])*(_i_var[134]);
	_i_var[158] = (_i_var[25])*(_i_var[135]);
	_i_var[159] = (_i_var[25])*(_i_var[136]);
	_i_var[160] = (_i_var[25])*(_i_var[137]);
	_i_var[161] = (_i_var[25])*(_i_var[138]);
	_i_var[162] = (_i_var[25])*(_i_var[139]);
	energyhessian(0,0) = _i_var[119];
	energyhessian(1,0) = _i_var[140];
	energyhessian(2,0) = _i_var[141];
	energyhessian(3,0) = _i_var[142];
	energyhessian(4,0) = _i_var[117];
	energyhessian(5,0) = _i_var[118];
	energyhessian(6,0) = _i_var[143];
	energyhessian(7,0) = _i_var[144];
	energyhessian(8,0) = _i_var[145];
	energyhessian(9,0) = _i_var[120];
	energyhessian(10,0) = _i_var[121];
	energyhessian(11,0) = _i_var[122];
	energyhessian(0,1) = _i_var[140];
	energyhessian(1,1) = _i_var[124];
	energyhessian(2,1) = _i_var[146];
	energyhessian(3,1) = _i_var[117];
	energyhessian(4,1) = _i_var[147];
	energyhessian(5,1) = _i_var[123];
	energyhessian(6,1) = _i_var[148];
	energyhessian(7,1) = _i_var[149];
	energyhessian(8,1) = _i_var[150];
	energyhessian(9,1) = _i_var[125];
	energyhessian(10,1) = _i_var[126];
	energyhessian(11,1) = _i_var[127];
	energyhessian(0,2) = _i_var[141];
	energyhessian(1,2) = _i_var[146];
	energyhessian(2,2) = _i_var[128];
	energyhessian(3,2) = _i_var[118];
	energyhessian(4,2) = _i_var[123];
	energyhessian(5,2) = _i_var[151];
	energyhessian(6,2) = _i_var[152];
	energyhessian(7,2) = _i_var[153];
	energyhessian(8,2) = _i_var[154];
	energyhessian(9,2) = _i_var[129];
	energyhessian(10,2) = _i_var[130];
	energyhessian(11,2) = _i_var[131];
	energyhessian(0,3) = _i_var[142];
	energyhessian(1,3) = _i_var[117];
	energyhessian(2,3) = _i_var[118];
	energyhessian(3,3) = _i_var[119];
	energyhessian(4,3) = _i_var[95];
	energyhessian(5,3) = _i_var[96];
	energyhessian(6,3) = _i_var[120];
	energyhessian(7,3) = _i_var[121];
	energyhessian(8,3) = _i_var[122];
	energyhessian(9,3) = _i_var[99];
	energyhessian(10,3) = _i_var[100];
	energyhessian(11,3) = _i_var[101];
	energyhessian(0,4) = _i_var[117];
	energyhessian(1,4) = _i_var[147];
	energyhessian(2,4) = _i_var[123];
	energyhessian(3,4) = _i_var[95];
	energyhessian(4,4) = _i_var[124];
	energyhessian(5,4) = _i_var[102];
	energyhessian(6,4) = _i_var[125];
	energyhessian(7,4) = _i_var[126];
	energyhessian(8,4) = _i_var[127];
	energyhessian(9,4) = _i_var[104];
	energyhessian(10,4) = _i_var[105];
	energyhessian(11,4) = _i_var[106];
	energyhessian(0,5) = _i_var[118];
	energyhessian(1,5) = _i_var[123];
	energyhessian(2,5) = _i_var[151];
	energyhessian(3,5) = _i_var[96];
	energyhessian(4,5) = _i_var[102];
	energyhessian(5,5) = _i_var[128];
	energyhessian(6,5) = _i_var[155];
	energyhessian(7,5) = _i_var[156];
	energyhessian(8,5) = _i_var[131];
	energyhessian(9,5) = _i_var[132];
	energyhessian(10,5) = _i_var[133];
	energyhessian(11,5) = _i_var[109];
	energyhessian(0,6) = _i_var[143];
	energyhessian(1,6) = _i_var[148];
	energyhessian(2,6) = _i_var[152];
	energyhessian(3,6) = _i_var[120];
	energyhessian(4,6) = _i_var[125];
	energyhessian(5,6) = _i_var[155];
	energyhessian(6,6) = _i_var[136];
	energyhessian(7,6) = _i_var[157];
	energyhessian(8,6) = _i_var[158];
	energyhessian(9,6) = _i_var[159];
	energyhessian(10,6) = _i_var[134];
	energyhessian(11,6) = _i_var[135];
	energyhessian(0,7) = _i_var[144];
	energyhessian(1,7) = _i_var[149];
	energyhessian(2,7) = _i_var[153];
	energyhessian(3,7) = _i_var[121];
	energyhessian(4,7) = _i_var[126];
	energyhessian(5,7) = _i_var[156];
	energyhessian(6,7) = _i_var[157];
	energyhessian(7,7) = _i_var[138];
	energyhessian(8,7) = _i_var[160];
	energyhessian(9,7) = _i_var[134];
	energyhessian(10,7) = _i_var[161];
	energyhessian(11,7) = _i_var[137];
	energyhessian(0,8) = _i_var[145];
	energyhessian(1,8) = _i_var[150];
	energyhessian(2,8) = _i_var[154];
	energyhessian(3,8) = _i_var[122];
	energyhessian(4,8) = _i_var[127];
	energyhessian(5,8) = _i_var[131];
	energyhessian(6,8) = _i_var[158];
	energyhessian(7,8) = _i_var[160];
	energyhessian(8,8) = _i_var[139];
	energyhessian(9,8) = _i_var[135];
	energyhessian(10,8) = _i_var[137];
	energyhessian(11,8) = _i_var[162];
	energyhessian(0,9) = _i_var[120];
	energyhessian(1,9) = _i_var[125];
	energyhessian(2,9) = _i_var[129];
	energyhessian(3,9) = _i_var[99];
	energyhessian(4,9) = _i_var[104];
	energyhessian(5,9) = _i_var[132];
	energyhessian(6,9) = _i_var[159];
	energyhessian(7,9) = _i_var[134];
	energyhessian(8,9) = _i_var[135];
	energyhessian(9,9) = _i_var[136];
	energyhessian(10,9) = _i_var[110];
	energyhessian(11,9) = _i_var[111];
	energyhessian(0,10) = _i_var[121];
	energyhessian(1,10) = _i_var[126];
	energyhessian(2,10) = _i_var[130];
	energyhessian(3,10) = _i_var[100];
	energyhessian(4,10) = _i_var[105];
	energyhessian(5,10) = _i_var[133];
	energyhessian(6,10) = _i_var[134];
	energyhessian(7,10) = _i_var[161];
	energyhessian(8,10) = _i_var[137];
	energyhessian(9,10) = _i_var[110];
	energyhessian(10,10) = _i_var[138];
	energyhessian(11,10) = _i_var[114];
	energyhessian(0,11) = _i_var[122];
	energyhessian(1,11) = _i_var[127];
	energyhessian(2,11) = _i_var[131];
	energyhessian(3,11) = _i_var[101];
	energyhessian(4,11) = _i_var[106];
	energyhessian(5,11) = _i_var[109];
	energyhessian(6,11) = _i_var[135];
	energyhessian(7,11) = _i_var[137];
	energyhessian(8,11) = _i_var[162];
	energyhessian(9,11) = _i_var[111];
	energyhessian(10,11) = _i_var[114];
	energyhessian(11,11) = _i_var[139];
}

    
#endif